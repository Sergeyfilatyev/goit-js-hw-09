{"mappings":"gfAAA,IAeIA,EAIAC,EAIAC,EAvBJC,EAAAC,EAAA,SACMC,EAAO,CACXC,gBAAiBC,SAASC,cAAc,kBACxCC,eAAgBF,SAASC,cAAc,iBACvCE,YAAaH,SAASC,cAAc,mBACpCG,WAAYJ,SAASC,cAAc,UAWrCH,EAAKC,gBAAgBM,iBAAiB,SAAS,SAAAC,GAC7Cb,EAAaa,EAAMC,OAAOC,K,IAG5BV,EAAKI,eAAeG,iBAAiB,SAAS,SAAAC,GAC5CZ,EAAYY,EAAMC,OAAOC,K,IAG3BV,EAAKK,YAAYE,iBAAiB,SAAS,SAAAC,GACzCX,EAASW,EAAMC,OAAOC,K,IAExBV,EAAKM,WAAWC,iBAAiB,UAAU,SAAAC,GACzCA,EAAMG,iBACNH,EAAMC,OAAOG,QAEb,IADA,IAAMC,EAAY,GACTC,EAAI,EAAGA,GAAKjB,EAAQiB,GAAK,EAChCD,EAAUE,KAAKD,GAEjBD,EAAUG,KAAI,SAAAC,GACZ,OAAOC,YAAW,WA5BtB,IAAuBC,EAAUC,GAAVD,EA6BHF,EA7BaG,EA6BLC,OAAO1B,GAAcC,GAAaqB,EAAS,GA5B/CK,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,CAAEN,WAAUC,UAE5BI,QAAQE,OAAO,CAAEP,WAAUC,WAyB7BO,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBtB,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAE9DY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBtB,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,MAE7DC,OAAO1B,GAAcC,GAAaqB,EAAS,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  inputFirstDelay: document.querySelector('[name=\"delay\"]'),\n  inputDelayStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n  formSubmit: document.querySelector('.form'),\n};\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve({ position, delay });\n  } else {\n    return Promise.reject({ position, delay });\n  }\n}\nlet firstDelay;\nrefs.inputFirstDelay.addEventListener('input', event => {\n  firstDelay = event.target.value;\n});\nlet delayStep;\nrefs.inputDelayStep.addEventListener('input', event => {\n  delayStep = event.target.value;\n});\nlet amount;\nrefs.inputAmount.addEventListener('input', event => {\n  amount = event.target.value;\n});\nrefs.formSubmit.addEventListener('submit', event => {\n  event.preventDefault();\n  event.target.reset();\n  const amountArr = [];\n  for (let i = 1; i <= amount; i += 1) {\n    amountArr.push(i);\n  }\n  amountArr.map(amount => {\n    return setTimeout(() => {\n      createPromise(amount, Number(firstDelay) + delayStep * (amount - 1))\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, Number(firstDelay) + delayStep * (amount - 1));\n  });\n});\n"],"names":["$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","inputFirstDelay","document","querySelector","inputDelayStep","inputAmount","formSubmit","addEventListener","event","target","value","preventDefault","reset","amountArr","i","push","map","amount1","setTimeout","position","delay","Number","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3dd27a5f.js.map"}