{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAO,CACXC,gBAAiBC,SAASC,cAAc,kBACxCC,eAAgBF,SAASC,cAAc,iBACvCE,YAAaH,SAASC,cAAc,mBACpCG,WAAYJ,SAASC,cAAc,UAUrC,IAAII,EAIAC,EAIAC,EAPJT,EAAKC,gBAAgBS,iBAAiB,SAASC,IAC7CJ,EAAaI,EAAMC,OAAOC,KAAK,IAGjCb,EAAKI,eAAeM,iBAAiB,SAASC,IAC5CH,EAAYG,EAAMC,OAAOC,KAAK,IAGhCb,EAAKK,YAAYK,iBAAiB,SAASC,IACzCF,EAASE,EAAMC,OAAOC,KAAK,IAE7Bb,EAAKM,WAAWI,iBAAiB,UAAUC,IACzCA,EAAMG,iBACNH,EAAMC,OAAOG,QACb,MAAMC,EAAY,GAClB,IAAK,IAAIC,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAChCD,EAAUE,KAAKD,GAEjBD,EAAUG,KAAIC,GACLC,YAAW,KA5BtB,IAAuBC,EAAUC,GAAVD,EA6BHF,EA7BaG,EA6BLC,OAAOjB,GAAcC,GAAaY,EAAS,GA5B/CK,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,C,SAAEN,E,MAAUC,IAE5BI,QAAQE,OAAO,C,SAAEP,E,MAAUC,KAyB7BO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBzB,EAAAiC,OAAOC,QAAQ,uBAAqBV,QAAiBC,MAAU,IAEhEU,OAAM,EAACX,SAAEA,EAAQC,MAAEA,MAClBzB,EAAAiC,OAAOG,QAAQ,sBAAoBZ,QAAeC,MAAU,GAC5D,GACHC,OAAOjB,GAAcC,GAAaY,EAAS,KAC9C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst refs = {\n  inputFirstDelay: document.querySelector('[name=\"delay\"]'),\n  inputDelayStep: document.querySelector('[name=\"step\"]'),\n  inputAmount: document.querySelector('[name=\"amount\"]'),\n  formSubmit: document.querySelector('.form'),\n};\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve({ position, delay });\n  } else {\n    return Promise.reject({ position, delay });\n  }\n}\nlet firstDelay;\nrefs.inputFirstDelay.addEventListener('input', event => {\n  firstDelay = event.target.value;\n});\nlet delayStep;\nrefs.inputDelayStep.addEventListener('input', event => {\n  delayStep = event.target.value;\n});\nlet amount;\nrefs.inputAmount.addEventListener('input', event => {\n  amount = event.target.value;\n});\nrefs.formSubmit.addEventListener('submit', event => {\n  event.preventDefault();\n  event.target.reset();\n  const amountArr = [];\n  for (let i = 1; i <= amount; i += 1) {\n    amountArr.push(i);\n  }\n  amountArr.map(amount => {\n    return setTimeout(() => {\n      createPromise(amount, Number(firstDelay) + delayStep * (amount - 1))\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n    }, Number(firstDelay) + delayStep * (amount - 1));\n  });\n});\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","inputFirstDelay","document","querySelector","inputDelayStep","inputAmount","formSubmit","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","addEventListener","event","target","value","preventDefault","reset","amountArr","i","push","map","amount1","setTimeout","position","delay","Number","Math","random","Promise","resolve","reject","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.0341d423.js.map"}